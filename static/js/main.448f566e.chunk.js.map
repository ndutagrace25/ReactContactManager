{"version":3,"sources":["context.js","components/layout/Header.jsx","components/pages/About.jsx","components/layout/TextInputGroup.jsx","components/contacts/AddContact.jsx","components/contacts/EditContact.jsx","components/contacts/Contact.jsx","components/contacts/contacts.jsx","components/pages/NotFound.jsx","components/test/test.jsx","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_this2","axios","get","then","res","data","react_default","a","createElement","props","children","Component","Consumer","Header","branding","className","href","react_router_dom","to","defaultProps","About","TextInputGroup","_ref","label","name","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","email","phone","errors","e","defineProperty","target","onSubmit","preventDefault","_this$state","newContact","post","history","push","_this$state2","bind","layout_TextInputGroup","EditContact","updateContact","match","params","put","_this3","Contact","showContactInfo","OnShowClick","onDeleteClick","delete","_this$props$contact","style","cursor","onClick","float","color","marginRight","Contacts","Fragment","contacts_Contact","NotFound","Test","title","userId","fetch","response","json","App","context_Provider","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.448f566e.chunk.js","sourcesContent":["import React, {\r\n    Component\r\n} from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\n//creating a reducer\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n            }\r\n            case 'ADD_CONTACT':\r\n                return {\r\n                    ...state,\r\n                    contacts: [action.payload, ...state.contacts]\r\n                }\r\n                case 'UPDATE_CONTACT':\r\n                    return {\r\n                        ...state,\r\n                        contacts: state.contacts.map(contact => \r\n                            contact.id === action.payload.id ? (contact = action.payload) : contact\r\n                        )\r\n                    }\r\n                    default:\r\n                        return state;\r\n    }\r\n}\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts: [],\r\n\r\n        dispatch: action => {\r\n            this.setState(state => reducer(state, action))\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios\r\n            .get(\"https://jsonplaceholder.typicode.com/users\")\r\n            .then(res => {\r\n                this.setState({\r\n                    contacts: res.data\r\n                })\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return ( <\r\n            Context.Provider value = {\r\n                this.state\r\n            } > {\r\n                this.props.children\r\n            } <\r\n            /Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Header = props => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n        <div className=\"container\">\r\n            <a href=\"/\" className=\"navbar-brand\">\r\n                {branding}\r\n            </a>\r\n            <div>\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/\" className=\"nav-link\">\r\n                          <i className=\"fas fa-home\"></i>Home  \r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/about\" className=\"nav-link\">\r\n                        <i className=\"fas fa-question\"></i>About  \r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/contact/add\" className=\"nav-link\">\r\n                        <i className=\"fas fa-plus\"></i>Add Contact  \r\n                        </Link>\r\n                    </li>\r\n                    \r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: \"My App\"\r\n};\r\n\r\n//prop type validation\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nclass About extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n            <div>\r\n                <h1 className=\"display-4\">About Contact Manager</h1>\r\n                <p className=\"lead\">Simple app to manage contacts</p>\r\n                <p className=\"text-secondary\">Version 1</p>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default About;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        className={classnames(\"form-control form-control-lg\", {\r\n          \"is-invalid\": error\r\n        })}\r\n        placeholder={placeholder}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\"\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\n// import uuid from \"uuid\";\r\nimport axios from 'axios';\r\n\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  onSubmit = (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    //Check for Errors\r\n    if(name===''){\r\n        this.setState({\r\n            errors: {name: 'Name field is required'}\r\n        })\r\n        return;\r\n    }\r\n    if(email===''){\r\n        this.setState({\r\n            errors: {email: 'Email field is required'}\r\n        })\r\n        return;\r\n    }\r\n\r\n    if(phone===''){\r\n        this.setState({\r\n            errors: {phone: 'Phone field is required'}\r\n        })\r\n        return;\r\n    }\r\n\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    axios   \r\n        .post(`https://jsonplaceholder.typicode.com/users`, newContact)\r\n        .then(res => {\r\n            dispatch({ type: \"ADD_CONTACT\", payload: res.data });\r\n        })\r\n\r\n   \r\n\r\n    //clear state\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push('/');\r\n  };\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup \r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup \r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    type=\"email\"\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup \r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone Number\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\n// import uuid from \"uuid\";\r\nimport axios from 'axios';\r\n\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  componentDidMount () {\r\n      const {id} = this.props.match.params;\r\n      axios\r\n        .get(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n        .then (res => {\r\n            const contact = res.data;\r\n            this.setState({\r\n                name: contact.name,\r\n                email: contact.email,\r\n                phone: contact.phone\r\n            })\r\n        })\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  onSubmit = (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    //Check for Errors\r\n    if(name===''){\r\n        this.setState({\r\n            errors: {name: 'Name field is required'}\r\n        })\r\n        return;\r\n    }\r\n    if(email===''){\r\n        this.setState({\r\n            errors: {email: 'Email field is required'}\r\n        })\r\n        return;\r\n    }\r\n\r\n    if(phone===''){\r\n        this.setState({\r\n            errors: {phone: 'Phone field is required'}\r\n        })\r\n        return;\r\n    }\r\n\r\n    const updateContact = {\r\n        name,\r\n        phone,\r\n        email\r\n    }\r\n\r\n    const {id} = this.props.match.params;\r\n        axios\r\n            .put(`https://jsonplaceholder.typicode.com/users/${id}`, updateContact)\r\n            .then(res => {\r\n                dispatch({type: 'UPDATE_CONTACT', payload: res.data})\r\n            })\r\n    \r\n\r\n    //clear state\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push('/');\r\n  };\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup \r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup \r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    type=\"email\"\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup \r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone Number\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Consumer } from \"../../context\";\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n\r\n  OnShowClick = e => {\r\n    this.setState({\r\n      showContactInfo: !this.state.showContactInfo\r\n    });\r\n  };\r\n\r\n  onDeleteClick = (id, dispatch) => {\r\n    axios\r\n      .delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n      .then(res => {\r\n        dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    // console.log(name);\r\n    const { showContactInfo } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}{\" \"}\r\n                <i\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={this.OnShowClick}\r\n                  className=\"fas fa-sort-down\"\r\n                />\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                />\r\n                <Link to={`contact/edit/${id}`}>\r\n                  <i\r\n                    className=\"fas fa-pencil-alt\"\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      float: \"right\",\r\n                      color: \"black\",\r\n                      marginRight: \"1rem\"\r\n                    }}\r\n                  />\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email: {email}</li>\r\n                  <li className=\"list-group-item\">Phone: {phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\n//prop types validation\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport {Consumer} from '../../context';\r\n\r\nclass Contacts extends Component {\r\n\r\n    // deleteContact = (id) => {\r\n    //     const {contacts} = this.state;\r\n    //     //we use filter to remove an item\r\n    //     const newContacts = contacts.filter(contact => contact.id !==id);\r\n\r\n    //     this.setState({\r\n    //         contacts: newContacts\r\n    //     })\r\n\r\n    // }\r\n\r\n    render() { \r\n        return(\r\n            <Consumer>\r\n                {value => {\r\n                    const {contacts} = value;\r\n                    return(\r\n                        <React.Fragment>\r\n                            <h1 className=\"display-4 mb-2\">\r\n                                <span className=\"text-danger\">Contact</span> List\r\n                            </h1>\r\n                            {contacts.map((contact) => ( \r\n                            <Contact \r\n                                key={contact.id} \r\n                                contact={contact}\r\n                                // deleteClickHandler={this.deleteContact.bind(this, contact.id)}\r\n                            />\r\n                            ))}\r\n                        </React.Fragment>\r\n                                )\r\n                        }}\r\n            </Consumer>\r\n        );      \r\n    }\r\n}\r\n \r\nexport default Contacts;","import React, { Component } from 'react';\r\nclass NotFound extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n            <div>\r\n                <h1 className=\"display-4\">\r\n                    <span className=\"text-danger\">404 Page Not Found</span>\r\n                </h1>\r\n                <p className=\"lead\">Sorry that page doesn't exist</p>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default NotFound;","import React, { Component } from \"react\";\r\nclass Test extends Component {\r\n\r\n    state = {\r\n        title: '',\r\n        userId: ''\r\n    }\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/todos/1\")\r\n      .then(response => response.json())\r\n      .then(data => {\r\n          this.setState({\r\n              title: data.title,\r\n              userId: data.userId\r\n          })\r\n      });\r\n  }\r\n\r\n  // componentWillMount(){\r\n  //     console.log(\"component will mount...\")\r\n  // }\r\n\r\n  // componentDidUpdate(){\r\n  //     console.log(\"Component did update...\");\r\n  // }\r\n\r\n  // componentWillUpdate(){\r\n  //     console.log(\"Component will update...\");\r\n  // }\r\n\r\n  // componentWillReceiveProps(nextProps, nextState){\r\n  //     console.log('component will recieve new properties....');\r\n  // }\r\n  render() {\r\n      const {title, userId} = this.state;\r\n    return (\r\n      <div className=\"\">\r\n        <h1 className=\"display-4\">Test Component</h1>\r\n        <h2 className=\"display-4\">{title}</h2>\r\n        <h3 className=\"display-4\">{userId}</h3>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Test;\r\n","import React, { Component } from 'react';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport \"@fortawesome/fontawesome-free/css/all.css\";\n\nimport {Provider} from './context';\n\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport Contacts from './components/contacts/contacts';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/test';\n\nimport \"@fortawesome/fontawesome-free/css/all.css\";\n\n\nclass App extends Component {\n    render() { \n        return ( \n            <Provider>\n                <Router>\n                    <div>\n                        <Header branding=\"Contact Manager\"/>\n                        <div className=\"container\">\n                            <Switch>\n                                <Route exact path=\"/\" component={Contacts}/>\n                                <Route exact path=\"/contact/add\" component={AddContact}/>\n                                <Route exact path=\"/contact/edit/:id\" component={EditContact}/>\n                                <Route exact path=\"/about\" component={About}/>  \n                                <Route exact path=\"/test\" component={Test}/>\n                                <Route component={NotFound}/>                             \n                            </Switch>\n                        </div>                \n                    </div>  \n                </Router>                \n            </Provider>\n            \n         );\n    }\n}\n \nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}